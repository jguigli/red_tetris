version: '3.8'

services:
  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: red_tetris_server
    restart: unless-stopped
    ports:
      - "3004:3004"
    volumes:
      - ./server/src:/app/src
      - ./server/params.js:/app/params.js
      - ./server/test:/app/test
      - ./.eslintrc:/app/.eslintrc
      - ./.editorconfig:/app/.editorconfig
      - ./.eslintignore:/app/.eslintignore
      - ./babel.config.js:/app/babel.config.js
    environment:
      - NODE_ENV=production
      - DEBUG=tetris:*
    networks:
      - tetris-network

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: red_tetris_client
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./client/src:/app/src
      - ./client/webpack.config.js:/app/webpack.config.js
      - ./client/test:/app/test
      - ./.eslintrc:/app/.eslintrc
      - ./.editorconfig:/app/.editorconfig
      - ./.eslintignore:/app/.eslintignore
      - ./babel.config.js:/app/babel.config.js
    environment:
      - NODE_ENV=production
    depends_on:
      - server
    networks:
      - tetris-network

networks:
  tetris-network:
    driver: bridge 